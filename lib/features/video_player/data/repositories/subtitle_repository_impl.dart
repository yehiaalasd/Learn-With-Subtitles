// subtitle_repository_impl.dart
import 'dart:io';
import 'package:mxplayer/core.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:mxplayer/utils/srt_parser.dart';

class SubtitleRepositoryImpl implements SubtitleRepository {
  @override
  Future<String> getSubtitlePath(String videoPath) async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    return prefs.getString(videoPath) ?? '';
  }

  @override
  Future<void> saveSubtitlePath(String videoPath, String subtitlePath) async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    await prefs.setString(videoPath, subtitlePath);
  }

  @override
  Future<bool> subtitleExists(String videoPath) async {
    String potentialSrtPath =
        videoPath.replaceAll(RegExp(r'\.[^\.]+$'), '.srt');
    return await File(potentialSrtPath).exists();
  }

  String replaceContractions(String text) {
    // Sort keys by length to replace longer contractions first
    final sortedKeys = contractionsMap.keys.toList()
      ..sort((a, b) => b.length.compareTo(a.length));

    sortedKeys.forEach((key) {
      final pattern =
          RegExp(r'\b${RegExp.escape(key)}\b', caseSensitive: false);
      // Replace each contraction with its full form
      text = text.replaceAll(pattern, contractionsMap[key]!.first);
    });

    return text;
  }

  @override
  Future<List<Subtitle>> fetchSubtitles(
      String subtitlePath, KnownWordsModel model) async {
    List<ExtractedSubtitle> extractedSubtitle =
        parseSrt(await SubtitleMethods().readSubtitleFile(subtitlePath));
    List<Subtitle> subtitles = [];
    for (ExtractedSubtitle subtitle in extractedSubtitle) {
      // Replace contractions to ensure pure English
      subtitles.add(Subtitle(
        text: replaceContractions(subtitle.rawLines.join(' ')),
        start: subtitle.range.beginDuration,
        end: subtitle.range.endDuration,
      ));
    }
    List<Subtitle> subtitles2 = [];

    for (Subtitle x in subtitles) {
      subtitles2.add(Subtitle(
          text: replaceContractions(x.text), start: x.start, end: x.end));
    }

    return subtitles2;
  }
}

final Map<String, List<String>> contractionsMap = {
  // Original contractions from your previous list
  'ain\'t': ['am not', 'is not', 'are not'],
  'amn\'t': ['am not'],
  'aren\'t': ['are not', 'am not'],
  'can\'t': ['cannot'],
  'cain\'t': ['cannot'],
  'cause': ['because'],
  'could\'ve': ['could have'],
  'couldn\'t': ['could not'],
  'couldn\'t\'ve': ['could not have'],
  'daren\'t': ['dare not', 'dared not'],
  'dasn\'t': ['dare not'],
  'didn\'t': ['did not'],
  'doesn\'t': ['does not'],
  'don\'t': ['do not', 'does not'],
  'd\'ye': ['do you', 'did you'],
  'e\'er': ['ever'],
  'everybody\'s': ['everybody is'],
  'everyone\'s': ['everyone is'],
  'finna': ['fixing to', 'going to'],
  'g\'day': ['good day'],
  'gimme': ['give me'],
  'giv\'n': ['given'],
  'gonna': ['going to'],
  'gon\'t': ['go not'],
  'gotta': ['got to'],
  'hadn\'t': ['had not'],
  'had\'ve': ['had have'],
  'hasn\'t': ['has not'],
  'haven\'t': ['have not'],
  'he\'d': ['he had', 'he would'],
  'he\'ll': ['he will', 'he shall'],
  'he\'s': ['he has', 'he is'],
  'he\'ve': ['he have'],
  'how\'d': ['how did', 'how would'],
  'howdy': ['how do you do', 'how do you fare'],
  'how\'ll': ['how will'],
  'how\'re': ['how are'],
  'how\'s': ['how is', 'how has', 'how does'],
  'I\'d': ['I had', 'I would'],
  'I\'d\'ve': ['I would have'],
  'I\'ll': ['I will', 'I shall'],
  'I\'m': ['I am'],
  'I\'m\'a': ['I am about to'],
  'Imma': ['I am about to'],
  'I\'m\'o': ['I am going to'],
  'innit': ['is it not'],
  'I\'ve': ['I have'],
  'isn\'t': ['is not'],
  'it\'d': ['it would'],
  'it\'ll': ['it will', 'it shall'],
  'it\'s': ['it is', 'it has'],
  'let\'s': ['let us'],
  'ma\'am': ['madam'],
  'mayn\'t': ['may not'],
  'may\'ve': ['may have'],
  'methinks': ['me thinks'],
  'mightn\'t': ['might not'],
  'might\'ve': ['might have'],
  'mustn\'t': ['must not'],
  'mustn\'t\'ve': ['must not have'],
  'must\'ve': ['must have'],
  'needn\'t': ['need not'],
  'ne\'er': ['never'],
  'o\'clock': ['of the clock'],
  'o\'er': ['over'],
  'ol\'': ['old'],
  'oughtn\'t': ['ought not'],
  '\'s': ['is', 'has', 'does', 'or us'],
  'shalln\'t': ['shall not'],
  'shan\'t': ['shall not'],
  'she\'d': ['she had', 'she would'],
  'she\'ll': ['she will', 'she shall'],
  'she\'s': ['she is', 'she has'],
  'should\'ve': ['should have'],
  'shouldn\'t': ['should not'],
  'shouldn\'t\'ve': ['should not have'],
  'somebody\'s': ['somebody is', 'somebody has'],
  'someone\'s': ['someone is', 'someone has'],
  'something\'s': ['something is', 'something has'],
  'so\'re': ['so are'],
  'that\'ll': ['that will', 'that shall'],
  'that\'re': ['that are'],
  'that\'s': ['that is', 'that has'],
  'that\'d': ['that would', 'that had'],
  'there\'d': ['there had', 'there would'],
  'there\'ll': ['there will', 'there shall'],
  'there\'re': ['there are'],
  'there\'s': ['there is', 'there has'],
  'these\'re': ['these are'],
  'these\'ve': ['these have'],
  'they\'d': ['they had', 'they would'],
  'they\'ll': ['they will', 'they shall'],
  'they\'re': ['they are', 'they were'],
  'they\'ve': ['they have'],
  'this\'s': ['this is', 'this has'],
  'those\'re': ['those are'],
  'those\'ve': ['those have'],
  '\'tis': ['it is'],
  'to\'ve': ['to have'],
  '\'twas': ['it was'],
  'twas': ['it was'],
  'wanna': ['want to'],
  'wasn\'t': ['was not'],
  'we\'d': ['we had', 'we would', 'we did'],
  'we\'d\'ve': ['we would have'],
  'we\'ll': ['we will', 'we shall'],
  'we\'re': ['we are'],
  'we\'ve': ['we have'],
  'weren\'t': ['were not'],
  'what\'d': ['what did'],
  'what\'ll': ['what will', 'what shall'],
  'what\'re': ['what are', 'what were'],
  'what\'s': ['what is', 'what has', 'what does'],
  'what\'ve': ['what have'],
  'when\'s': ['when is'],
  'where\'d': ['where did'],
  'where\'ll': ['where will', 'where shall'],
  'where\'re': ['where are'],
  'where\'s': ['where is', 'where has', 'where does'],
  'where\'ve': ['where have'],
  'which\'d': ['which had', 'which would'],
  'which\'ll': ['which will', 'which shall'],
  'which\'re': ['which are'],
  'which\'s': ['which is', 'which has'],
  'which\'ve': ['which have'],
  'who\'d': ['who did', 'who had', 'who would'],
  'who\'d\'ve': ['who would have'],
  'who\'ll': ['who will', 'who shall'],
  'who\'s': ['who is', 'who does', 'who has'],
  'who\'ve': ['who have'],
  'why\'d': ['why did'],
  'why\'re': ['why are'],
  'why\'s': ['why is', 'why does', 'why has'],
  'won\'t': ['will not'],
  'would\'ve': ['would have'],
  'wouldn\'t': ['would not'],
  'y\'all': ['you all'],
  'y\'all\'d\'ve': ['you all would have'],
  'y\'all\'re': ['you all are'],
  'you\'d': ['you would', 'you had'],
  'you\'ll': ['you will', 'you shall'],
  'you\'re': ['you are'],
  'you\'ve': ['you have'],
  'ain\'t': ['am not', 'is not', 'are not'],
  'amn\'t': ['am not'],
  'aren\'t': ['are not', 'am not'],
  'can\'t': ['cannot'],
  'cain\'t': ['cannot'],
  'cause': ['because'],
  'could\'ve': ['could have'],
  'couldn\'t': ['could not'],
  'couldn\'t\'ve': ['could not have'],
  'daren\'t': ['dare not', 'dared not'],
  'dasn\'t': ['dare not'],
  'didn\'t': ['did not'],
  'doesn\'t': ['does not'],
  'don\'t': ['do not', 'does not'],
  'd\'ye': ['do you', 'did you'],
  'e\'er': ['ever'],
  'everybody\'s': ['everybody is'],
  'everyone\'s': ['everyone is'],
  'finna': ['fixing to', 'going to'],
  'g\'day': ['good day'],
  'gimme': ['give me'],
  'giv\'n': ['given'],
  'gonna': ['going to'],
  'gon\'t': ['go not'],
  'gotta': ['got to'],
  'hadn\'t': ['had not'],
  'had\'ve': ['had have'],
  'hasn\'t': ['has not'],
  'haven\'t': ['have not'],
  'he\'d': ['he had', 'he would'],
  'he\'ll': ['he will', 'he shall'],
  'he\'s': ['he has', 'he is'],
  'he\'ve': ['he have'],
  'how\'d': ['how did', 'how would'],
  'howdy': ['how do you do', 'how do you fare'],
  'how\'ll': ['how will'],
  'how\'re': ['how are'],
  'how\'s': ['how is', 'how has', 'how does'],
  'I\'d': ['I had', 'I would'],
  'I\'d\'ve': ['I would have'],
  'I\'ll': ['I will', 'I shall'],
  'I\'m': ['I am'],
  'I\'m\'a': ['I am about to'],
  'Imma': ['I am about to'],
  'I\'m\'o': ['I am going to'],
  'innit': ['is it not'],
  'I\'ve': ['I have'],
  'isn\'t': ['is not'],
  'it\'d': ['it would'],
  'it\'ll': ['it will', 'it shall'],
  'it\'s': ['it is', 'it has'],
  'let\'s': ['let us'],
  'ma\'am': ['madam'],
  'mayn\'t': ['may not'],
  'may\'ve': ['may have'],
  'methinks': ['me thinks'],
  'mightn\'t': ['might not'],
  'might\'ve': ['might have'],
  'mustn\'t': ['must not'],
  'mustn\'t\'ve': ['must not have'],
  'must\'ve': ['must have'],
  'needn\'t': ['need not'],
  'ne\'er': ['never'],
  'o\'clock': ['of the clock'],
  'o\'er': ['over'],
  'ol\'': ['old'],
  'oughtn\'t': ['ought not'],
  '\'s': ['is', 'has', 'does', 'or us'],
  'shalln\'t': ['shall not'],
  'shan\'t': ['shall not'],
  'she\'d': ['she had', 'she would'],
  'she\'ll': ['she will', 'she shall'],
  'she\'s': ['she is', 'she has'],
  'should\'ve': ['should have'],
  'shouldn\'t': ['should not'],
  'shouldn\'t\'ve': ['should not have'],
  'somebody\'s': ['somebody is', 'somebody has'],
  'someone\'s': ['someone is', 'someone has'],
  'something\'s': ['something is', 'something has'],
  'so\'re': ['so are'],
  'that\'ll': ['that will', 'that shall'],
  'that\'re': ['that are'],
  'that\'s': ['that is', 'that has'],
  'that\'d': ['that would', 'that had'],
  'there\'d': ['there had', 'there would'],
  'there\'ll': ['there will', 'there shall'],
  'there\'re': ['there are'],
  'there\'s': ['there is', 'there has'],
  'these\'re': ['these are'],
  'these\'ve': ['these have'],
  'they\'d': ['they had', 'they would'],
  'they\'ll': ['they will', 'they shall'],
  'they\'re': ['they are', 'they were'],
  'they\'ve': ['they have'],
  'this\'s': ['this is', 'this has'],
  'those\'re': ['those are'],
  'those\'ve': ['those have'],
  '\'tis': ['it is'],
  'to\'ve': ['to have'],
  '\'twas': ['it was'],
  'twas': ['it was'],
  'wanna': ['want to'],
  'wasn\'t': ['was not'],
  'we\'d': ['we had', 'we would', 'we did'],
  'we\'d\'ve': ['we would have'],
  'we\'ll': ['we will', 'we shall'],
  'we\'re': ['we are'],
  'we\'ve': ['we have'],
  'weren\'t': ['were not'],
  'what\'d': ['what did'],
  'what\'ll': ['what will', 'what shall'],
  'what\'re': ['what are', 'what were'],
  'what\'s': ['what is', 'what has', 'what does'],
  'what\'ve': ['what have'],
  'when\'s': ['when is'],
  'where\'d': ['where did'],
  'where\'ll': ['where will', 'where shall'],
  'where\'re': ['where are'],
  'where\'s': ['where is', 'where has', 'where does'],
  'where\'ve': ['where have'],
  'which\'d': ['which had', 'which would'],
  'which\'ll': ['which will', 'which shall'],
  'which\'re': ['which are'],
  'which\'s': ['which is', 'which has'],
  'which\'ve': ['which have'],
  'who\'d': ['who did', 'who had', 'who would'],
  'who\'d\'ve': ['who would have'],
  'who\'ll': ['who will', 'who shall'],
  'who\'s': ['who is', 'who does', 'who has'],
  'who\'ve': ['who have'],
  'why\'d': ['why did'],
  'why\'re': ['why are'],
  'why\'s': ['why is', 'why does', 'why has'],
  'won\'t': ['will not'],
  'would\'ve': ['would have'],
  'wouldn\'t': ['would not'],
  'y\'all': ['you all'],
  'y\'all\'d\'ve': ['you all would have'],
  'y\'all\'re': ['you all are'],
  'you\'d': ['you would', 'you had'],
  'you\'ll': ['you will', 'you shall'],
  'you\'re': ['you are'],
  'you\'ve': ['you have'],
  // Additional contractions
  'ain\'t': ['am not', 'is not', 'are not'],
  'it\'s': ['it is', 'it has'],
  'they\'ve': ['they have'],
  'he\'d\'ve': ['he would have'],
  'we\'d\'ve': ['we would have'],
  'you\'d\'ve': ['you would have'],
  'she\'d\'ve': ['she would have'],
  'I\'d\'ve': ['I would have'],
  'could\'ve': ['could have'],
  'should\'ve': ['should have'],
  'might\'ve': ['might have'],
  'must\'ve': ['must have'],
  'would\'ve': ['would have'],
  'ain\'t': ['am not', 'is not', 'are not'],

  'that’s': ['that is'],
  'there’s': ['there is', 'there has'],
  'here’s': ['here is', 'here has'],
};
